@use "_colors.scss" as *;
@use "_mixins.scss" as *;


.header {
   // display: none;
   @include adaptiveValue('padding-block', 44, 20);
   position: fixed;
   width: 100%;
   top: 0;
   z-index: 60;
   min-height: toRem(48);
   transition: background-color 0.3s;
   background-color: transparent;
   // background-color: $dark;

   &::before {
      content: "";
      width: 100%;
      position: absolute;
      top: 0;
      left: 0;
      height: 100%;
      background-color: $dark;
      transition: opacity 0.3s ease;
      opacity: 0;
      z-index: -1;
   }

   &.scrolled {
      &::before {
         opacity: 1;
      }
   }

   // .header__container
   &__container {

   }

   // .header__body
   &__body {
      // background-color: $dark;
      // @include adaptiveValue('padding-block', 44, 20);
   }
}

.body-header {
   display: flex;
   align-items: center;
   justify-content: space-between;
   @include adaptiveValue('column-gap', 20, 10);

   // .body-header__logo
   &__logo {

   }

   // .body-header__menu
   &__menu {}

   // .body-header__button
   &__button {
      z-index: 5;
      @media (max-width: toEm(777)) {
         //   width: 100%;
           text-align: center;
      }
   }
}

.logo {
   flex-shrink: 0;
   z-index: 5;

   // .logo__image
   &__image {}

   @media (max-width: toEm(777)) {
     flex-grow: 1;
   }
}

.menu-header {
   @media (max-width: toEm(777)) {
      display: block;
      width: 100%;
      height: 100%;
      position: fixed;
      top: 0;
      right: -100%;
      background-color: $orange;
      overflow: auto;
      transition: all 0.3s;
      z-index: 3;
      padding: toRem(102) toRem(15) toRem(30) toRem(15);

      &::before {
         content: "";
         position: fixed;
         top: 0;
         background-color: $dark;
         width: 100%;
         height: toRem(86);
         transition: all 0.3s;
         right: -100%;
         z-index: 3;
         .menu-open & {
            right: 0;
         }
      }

      .menu-open & {
         right: 0;
      }
   }

   // .menu-header__list
   &__list {
      display: flex;
      flex-wrap: wrap;
      align-items: center;
      justify-content: flex-start;
      row-gap: toRem(5);
      @include adaptiveValue('column-gap', 50, 10);

      @media (max-width: toEm(777)) {
         flex-direction: column;
         align-items: center;
         gap: toRem(20);
      }
   }

   // .menu-header__item

   &__item {
      @include typography('M', 600);
      color: $white;
      @media (max-width: toEm(777)) {
         @include typography('h1');
      }
   }

   // .menu-header__link

   &__link {
      position: relative;

      &::after {
         content: "";
         position: absolute;
         left: 0;
         bottom: 0;
         width: 0;
         height: toRem(2);
         background-color: $orange;
         transition: width 0.3s;
      }

      @media (any-hover: hover) and (any-pointer: fine) {
         &:hover {
            &::after {
               width: 100%;
            }
         }
      }
   }
}


// ========================================================






